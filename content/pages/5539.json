{"content": "<div id=\"content\">\n<h3 id=\"home_art_head\">ANNOUNCEMENT</h3><div id=\"home_art_text\"><p style=\"padding: 4px;\"><strong>Additional Evacuation Orders</strong><br/>Lincoln Co. Sheriff has issued an additional Evacuation Order for the West Kootenai North and South Zones. At this time these Evacuation Orders affect the communities of Dodge Creek, Spring Creek,... <a class=\"more\" href=\"/incident/article/5539/39800/\">more</a></p></div><div id=\"modified\">INCIDENT UPDATED 2 HRS. AGO</div><h3>Approximate Location</h3><div>\n<!--  Commented out GoogleMaps API to change to ESRI Map Service\r\n\t\t\t<script type=\"text/javascript\"    src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDV7JiYnvlKzhGavFcXV7qhU28o4S8PC1k&sensor=false\">    </script>\r\n\t-->\n<script type=\"text/javascript\">\r\n\t\r\n\tvar toggleState = 1;\r\n\tvar gmap3;\r\n\tvar xml;\r\n\tvar mTypeid ;\r\n\tvar iname = \"Caribou Fire\";\r\n\tvar defLat =  48.973055555556;\r\n\tvar defLng =  -115.44111111111;\r\n\tvar defLon =  -115.44111111111;\r\n\tvar defZom =  13;\r\n\t\r\n\tvar detailLat =  48.973055555556;\r\n\tvar detailLng =  -115.44111111111;\r\n\tvar ts = new Date().getTime(); //required when cache option is true\r\n\tvar cacheoption = \"\";\r\n\t//072715 change to use single fire perimeter when ActivePerimeterOverlay fails to render\r\n\tvar perimetersOverlay = \"https://rmgsc.cr.usgs.gov/outgoing/GeoMAC/GeoMAC-FSPortal.kml\";\r\n\tvar unitPerimetersOverlay = ' ';\r\n\tvar isSinglePerimeter = 0;\r\n\t//$complexPerimeter\r\n\tvar isComplexPerimeter = 0;\r\n\t//$unitPerimeters\r\n\tvar isUnitPerimeters = 0;\r\n\tvar isActivePerimeters = false;\r\n\tvar perimeterOverlay = \"https://rmgsc.cr.usgs.gov/outgoing/GeoMAC/\";\r\n\t\t//PCR 06/12/12\r\n\t\t//Defect 5937: force no caching of ActiveFirePerimeters.kml by Goolge map rendering engine\r\n\t\t//add ?nocache=<timestamp> to the URL\r\n\tvar pOverlayURL = perimetersOverlay+cacheoption;\r\n\tvar pSinglePerimeterOverlayURL = perimeterOverlay+cacheoption;\r\n\t\r\n\tvar mapdiv = \"box_google_map\";\r\n\tvar markerIndex = 0;\r\n\tvar markers=[];\r\n\tvar infowindows=[];\r\n\tvar kmlActiveLayer;\r\n\tvar kmlSelectLayer;\r\n\tvar singleKmlLayer;\r\n\tvar kmlUnitLayers=[];\r\n\tvar kmlComplexLayers=[];\r\n\tvar unitLayerIndex = 0;\r\n\tvar complexLayerIndex = 0;\r\n\tvar numOverlays = 0;\r\n\t\r\n\r\n   \r\n   \r\n\r\n    function loadmap() {\r\n     //not supported in v3 if (GBrowserIsCompatible()) { \r\n     // }\r\n\t  \r\n\t  \tvar mapOptions = {\r\n\t  // Commented out the below to switch to the ESRI Service\r\n          // center: new google.maps.LatLng(defLat, defLng),\r\n\r\n          zoom: defZom,\r\n          panControl: true,\r\n\t\t  zoomControl: true,\r\n\t\t  mapTypeControl: true,\r\n\t\t  scaleControl: true,\r\n\t\t  streetViewControl: true,\r\n\t\t  overviewMapControl: true\r\n        };\r\n        gmap3 = new google.maps.Map(document.getElementById(mapdiv),  mapOptions);\r\n    \r\n        gmap3.setCenter(new google.maps.LatLng(defLat, defLng));\r\n        gmap3.setZoom(defZom);\r\n\t\t\t\t\r\n\t\t\r\n\t\tloadKml();\r\n\t\t\r\n\t\t\r\n\t\t// Add the current incident point if it is set\r\n\t\tif (detailLat != 0) {\r\n\t\t\tvar detail = [];\r\n\t\t\tdetail[\"disable_click\"] = true;\r\n\t\t\tdetail[\"contained\"] =     0;\t\t\r\n\t\t\tdetail[\"name\"] =  iname  ;\r\n\t\t\tdetail[\"summary\"] = \"\"  ;\r\n\t\t\tdetail[\"url\"] = \"\" ;\r\n\t\t\tdetail[\"lat\"] = parseFloat(detailLat) ;\r\n\t\t\tdetail[\"lng\"] =  parseFloat(detailLng) ;\r\n\t\t\r\n\t\t\t\r\n     \t\tdetail[\"point\"]= new google.maps.LatLng(parseFloat(detailLat), parseFloat(detailLng));\r\n           \r\n     \t\t\r\n\t\t    createMarker(detail);\t\r\n\t\t\t\r\n\t\t}\t\r\n\t\tmTypeid = gmap3.getMapTypeId();\r\n\t\t//todo\r\n\t\tloadJson();\r\n\t\t\r\n\t\t\r\n\r\n    \r\n    }\r\n\t\r\n\tfunction loadJson() {\t\t\r\n\t\t// JSON Parser\t\r\n\t\tvar feedSource = \"/feeds/json/markers/\";\r\n\t\r\n\t\t $.ajax({\r\n\t\t\t    url: feedSource,\r\n\t\t\t    success: function(data){\r\n\t\t\t     try{\r\n\t\t\t\t     //console.log(\"feed \"+data);\r\n\t\t\t\t     //var jsonData = eval(\"(\" + data + \")\");\r\n\t\t\t\t     var jsonData = JSON.parse(data);\r\n\t\t\t\r\n\t\t\t\t\t\tfor (var i = 0; i < jsonData.markers.length; i++) {\t\t\t\r\n\t\t\t\t\t\t\tvar output = [];\t\t\t\r\n\t\t\t\t\t\t\toutput[\"name\"] =      jsonData.markers[i].name;\r\n\t\t\t\t\t\t\toutput[\"summary\"] =   jsonData.markers[i].summary;\r\n\t\t\t\t\t\t\toutput[\"url\"] =       jsonData.markers[i].url;\r\n\t\t\t\t\t\t\toutput[\"lat\"] =       Math.round(jsonData.markers[i].lat*100)/100;\r\n\t\t\t\t\t\t\toutput[\"lng\"] =       Math.round(jsonData.markers[i].lng*100)/100;\r\n\t\t\t\t\t\t\toutput[\"contained\"] = jsonData.markers[i].contained;\r\n\t\t\t\t\t\t\t//todo new google.maps.LatLng(defLat, defLng)\r\n\t\t\t\t\t\t\t//output[\"point\"] =     new GLatLng(parseFloat(jsonData.markers[i].lat), parseFloat(jsonData.markers[i].lng));\r\n\t\t\t\t\t\t\t output[\"point\"] = new google.maps.LatLng(parseFloat(jsonData.markers[i].lat), parseFloat(jsonData.markers[i].lng));\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t// skip over incident details point for current incident\r\n\t\t\t\t\t\t\tif (output[\"lat\"] != detailLat || output[\"lng\"] != detailLng) {\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar marker = createMarker(output);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\t//if necessary createList of makers and windows if \r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (anErr){\r\n\t\t\t\t\t\tconsole.log(\"marker feed error \"+anErr);\r\n\t\t\t\t\t}\r\n\t\t\t   }\r\n \t\t\t });\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\t\t\r\n\tfunction loadKml() {\r\n\t\t\t//var kmlOptions = new google.maps.KmlLayerOptions();\r\n\t\tvar kmlOptions = {clickable:true,\r\n\t\t\t\t\t\tmap: gmap3,\r\n\t\t\t\t\t\tpreserveViewport: true,\r\n\t\t\t\t\t\tscreenOverlays: true,\r\n\t\t\t\t\t\tsuppressInfoWindows: false,\r\n\t\t\t\t\t\turl : pOverlayURL\r\n\t\t\t\t\t\t};\r\n\t\tkmlActiveLayer = new google.maps.KmlLayer(kmlOptions);\r\n\t\t\r\n\t\t//In case you want to handle a KML mouse click event\r\n\t\t//google.maps.event.addListener(kmlActiveLayer, \"click\", function(kmlMouseEvent) {\r\n\t\t\t//google.maps.KmlMouseEvent\r\n \t\t\t //alert(\"You clicked a kml feature. \"+kmlMouseEvent.featureData); \t\t\t\r\n \t\t\r\n\t\t//});\r\n\t\tgoogle.maps.event.addListener(kmlActiveLayer, \"status_changed\", function(kmlstatus) {\r\n\t\t\t\r\n \t\t\tconsole.log(\"Active Perimeter KML STATUS \"+kmlActiveLayer.getStatus()); \r\n \t\t\t//\r\n \t\t\tif (kmlActiveLayer.getStatus() == \"OK\"){\r\n \t\t\t\tisActivePerimeters = true;\r\n \t\t\t}\r\n \t\t\tif (kmlActiveLayer.getStatus() != \"OK\" && isSinglePerimeter){\r\n \t\t\t\tkmlActiveLayer.setMap(null);\r\n \t\t\t\tloadSinglePermiterKml(); \t\t\t\t\r\n \t\t\t}\t\r\n \t\t\tif (kmlActiveLayer.getStatus() != \"OK\" && isComplexPerimeter && isUnitPerimeters){\r\n \t\t\t\tkmlActiveLayer.setMap(null);\r\n \t\t\t\tloadComplexPermiterKmls(); \t\t\t\t\r\n \t\t\t}\r\n \t\t\tif (kmlActiveLayer.getStatus() != \"OK\" && !isComplexPerimeter && !isSinglePerimeter && isUnitPerimeters){\r\n \t\t\t\tkmlActiveLayer.setMap(null);\r\n \t\t\t\tloadUnitPermiterKmls(); \t\t\t\t\r\n \t\t\t}\t\t\r\n \t\t \r\n\t\t});\r\n\t\t\r\n\t}\r\n\t//call this when the ActiveFirePerimeters Overlay fails to render\r\n\t//this will render the single fire perimeter if one exists.\r\n\tfunction loadSinglePermiterKml(){\r\n\t\t\tvar kmlOptions = {clickable:true,\r\n\t\t\t\t\t\tmap: gmap3,\r\n\t\t\t\t\t\tpreserveViewport: true,\r\n\t\t\t\t\t\tscreenOverlays: true,\r\n\t\t\t\t\t\tsuppressInfoWindows: false,\r\n\t\t\t\t\t\turl : pSinglePerimeterOverlayURL\r\n\t\t\t\t\t\t};\r\n\t\t\tsingleKmlLayer = new google.maps.KmlLayer(kmlOptions);\r\n\t\t\tnumOverlays++;\r\n\t\t\tgoogle.maps.event.addListener(singleKmlLayer, \"status_changed\", function(kmlstatus) {\r\n\t\t\t\r\n\t\t \t\t\tconsole.log(\"Single KML STATUS \"+this.status+\" complex=\"+isComplexPerimeter); \r\n\t\t \t\t\t\t\r\n\t\t \t\t\r\n\t\t\t\t});\t\r\n\t\t\t\r\n\t}\r\n\t\r\n\t//this will render all the perimeters for the unit and its neighbors\r\n\tfunction loadUnitPermiterKmls(){\r\n\t\t\t//var inameonly = iname.replace(\"Complex\",\"\");\r\n\t\t\tvar numPerims = unitPerimetersOverlay.length;\r\n\t\t\tvar numUnitLayers =0;\r\n\t\t\tconsole.log(\"Unit KMLs load: =\"+numPerims);\r\n\t\t\t//if (numPerims > 30){\r\n\t\t\t//\tnumPerims = 30;\r\n\t\t\t//}\r\n\t\t\tvar x = document.createElement(\"SELECT\");\t\r\n\t\t\tx.id = \"unitperimetersid\";\r\n\t\t\tx.addEventListener(\"change\", addUnitLayerEvent);\t\t\r\n\t\t\tvar pdiv = document.getElementById(\"perimetersdiv\");\r\n\t\t\t//perimetersdescdiv\r\n\t\t\tvar pdes = document.getElementById(\"perimetersdescdiv\");\r\n\t\t\tpdes.innerHTML = \"<br><b>View nearby fire perimeters</b>\";\r\n\t\t\tpdiv.appendChild(x);\r\n\t\t\tvar zoom=gmap3.getZoom();\r\n\t\t\tconsole.log(\"Unit KML :\"+zoom);\r\n\t\t\tgmap3.setZoom(zoom-6);\r\n\t\t\tfor (i = 0; i < numPerims; i++) { \r\n\t\t\t\t  var kmlname = decodeURIComponent(unitPerimetersOverlay[i]);\r\n\t\t\t\t  console.log(\"Unit KML name to load: =\"+kmlname); \r\n\t\t\t\t  var option = document.createElement(\"option\");\r\n\t\t\t\t  option.text = kmlname.replace(\"https://rmgsc.cr.usgs.gov/outgoing/GeoMAC/\",\"\");\r\n\t\t\t\t  option.value = unitPerimetersOverlay[i];\r\n\t\t\t\t  x.add(option);\r\n\t\t\t      if (numOverlays < 10){\r\n\t\t\t     \tvar kmlOptions = {clickable:true,\r\n\t\t\t\t\t\tmap: gmap3,\r\n\t\t\t\t\t\tpreserveViewport: true,\r\n\t\t\t\t\t\tscreenOverlays: true,\r\n\t\t\t\t\t\tsuppressInfoWindows: false,\r\n\t\t\t\t\t\turl :  unitPerimetersOverlay[i]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\tvar kmlUnitLayer = new google.maps.KmlLayer(kmlOptions);\r\n\t\t\t\t\tkmlUnitLayers.push(kmlUnitLayer);\r\n\t\t\t\t\tnumUnitLayers++;\r\n\t\t\t\t\tnumOverlays++;\r\n\t\t\t\t\tgoogle.maps.event.addListener(kmlUnitLayer, \"status_changed\", function(kmlstatus) {\r\n\t\t\t\r\n\t\t \t\t\t\tconsole.log(\"Unit KML STATUS \"+this.status); \r\n\t\t \t\t\t\t\r\n\t\t \t\t\r\n\t\t\t\t\t});\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tfunction addUnitLayerEvent(event){\r\n\t\tvar layer = event;\r\n\t\tvar kmlurl = document.getElementById(\"unitperimetersid\").value;\r\n\t\tif (kmlSelectLayer != null){\r\n\t\t\tkmlSelectLayer.setMap(null);\r\n\t\t}\r\n\t\tremoveKMLLayers(kmlUnitLayers);\r\n\t\tvar kmlOptions = {clickable:true,\r\n\t\t\t\t\t\tmap: gmap3,\r\n\t\t\t\t\t\tpreserveViewport: true,\r\n\t\t\t\t\t\tscreenOverlays: true,\r\n\t\t\t\t\t\tsuppressInfoWindows: false,\r\n\t\t\t\t\t\turl :  kmlurl\r\n\t\t\t\t\t\t};\r\n\t\tkmlSelectLayer = new google.maps.KmlLayer(kmlOptions);\r\n\t\t\t\t\t\r\n\t\tgoogle.maps.event.addListener(kmlSelectLayer, \"status_changed\", function(kmlstatus) {\t\t\r\n\t\t \tconsole.log(\"Add KML layer STATUS \"+this.status);\t \t\t\r\n\t\t});\t\r\n\t}\r\n\t\r\n\tfunction loadComplexPermiterKmls(){\r\n\t\t\tvar inameonly = iname.replace(\"Complex\",\"\");\r\n\t\t\tvar numPerims = unitPerimetersOverlay.length;\r\n\t\t\tvar numComplexLayers= 0;\r\n\t\t\tvar selectAdded = false;\r\n\t\t\tconsole.log(\"Complex KMLs load: complex=\"+isComplexPerimeter+\" \"+numPerims+\" \"+inameonly);\r\n\t\t\t//if (numPerims > 30){\r\n\t\t\t//\tnumPerims = 30;\r\n\t\t\t//}\r\n\t\t\tvar zoom=gmap3.getZoom();\r\n\t\t\tconsole.log(\"Unit KML :\"+zoom);\r\n\t\t\tgmap3.setZoom(zoom-3);\r\n\t\t\t\r\n\t\t\tfor (i = 0; i < numPerims; i++) { \r\n\t\t\t\t  var kmlname = decodeURIComponent(unitPerimetersOverlay[i]);\r\n\t\t\t\t  if (isComplexPerimeter && (kmlname.search(inameonly) > 0)){\r\n\t\t\t\t  \tif (!selectAdded){\r\n\t\t\t\t  \t\tselectAdded = true;\r\n\t\t\t\t  \t\tvar x = document.createElement(\"SELECT\");\t\r\n\t\t\t\t\t\tx.id = \"complexperimetersid\";\r\n\t\t\t\t\t\tx.addEventListener(\"change\", addComplexLayerEvent);\t\t\r\n\t\t\t\t\t\tvar pdiv = document.getElementById(\"perimetersdiv\");\r\n\t\t\t\t\t\tvar pdes = document.getElementById(\"perimetersdescdiv\");\r\n\t\t\t\t\t\tpdes.innerHTML = \"<br><b>View related fire perimeters</b>\";\r\n\t\t\t\t\t\tpdiv.appendChild(x);\r\n\t\t\t\t\t\t//remove single permiter\r\n\t\t\t\t\t\tsingleKmlLayer.setMap(null);\r\n\t\t\t\t  \t\t\r\n\t\t\t\t  \t}\r\n\t\t\t\t  \tvar option = document.createElement(\"option\");\r\n\t\t\t\t  \toption.text = kmlname.replace(\"https://rmgsc.cr.usgs.gov/outgoing/GeoMAC/\",\"\");\r\n\t\t\t\t \toption.value = unitPerimetersOverlay[i];\r\n\t\t\t\t  \tx.add(option);\r\n\t\t\t\t  \r\n\t\t\t\t  console.log(\"Complex KML name to load: =\"+kmlname+\" \"+kmlname.search(inameonly)); \r\n\t\t\t      if (numOverlays < 9){\r\n\t\t\t     \tvar kmlOptions = {clickable:true,\r\n\t\t\t\t\t\tmap: gmap3,\r\n\t\t\t\t\t\tpreserveViewport: true,\r\n\t\t\t\t\t\tscreenOverlays: true,\r\n\t\t\t\t\t\tsuppressInfoWindows: false,\r\n\t\t\t\t\t\turl :  unitPerimetersOverlay[i]\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\tvar kmlComplexLayer = new google.maps.KmlLayer(kmlOptions);\r\n\t\t\t\t\tkmlComplexLayers.push(kmlComplexLayer);\r\n\t\t\t\t\tconsole.log(\"Add Layer complex perimeter: \"+unitPerimetersOverlay[i]);\r\n\t\t\t\t\tnumComplexLayers++;\r\n\t\t\t\t\tnumOverlays++;\r\n\t\t\t\t\tgoogle.maps.event.addListener(kmlComplexLayer, \"status_changed\", function(kmlstatus) {\r\n\t\t\t\r\n\t\t \t\t\t\tconsole.log(\"Complex KML STATUS \"+this.status); \r\n\t\t \t\t\t\t\r\n\t\t \t\t\r\n\t\t\t\t\t});\t\r\n\t\t\t\t\t\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\tfunction addComplexLayerEvent(event){\r\n\t\tvar layer = event;\r\n\t\tvar kmlurl = document.getElementById(\"complexperimetersid\").value;\r\n\t\tif (kmlSelectLayer != null){\r\n\t\t\tkmlSelectLayer.setMap(null);\r\n\t\t}\r\n\t\tremoveKMLLayers(kmlComplexLayers);\r\n\t\tvar kmlOptions = {clickable:true,\r\n\t\t\t\t\t\tmap: gmap3,\r\n\t\t\t\t\t\tpreserveViewport: true,\r\n\t\t\t\t\t\tscreenOverlays: true,\r\n\t\t\t\t\t\tsuppressInfoWindows: false,\r\n\t\t\t\t\t\turl :  kmlurl\r\n\t\t\t\t\t\t};\r\n\t\tkmlSelectLayer = new google.maps.KmlLayer(kmlOptions);\r\n\t\t\t\t\t\r\n\t\tgoogle.maps.event.addListener(kmlSelectLayer, \"status_changed\", function(kmlstatus) {\t\t\r\n\t\t \tconsole.log(\"Add KML layer STATUS \"+this.status);\t \t\t\r\n\t\t});\t\r\n\t}\r\n\r\n\tfunction removeKMLLayers(layers){\r\n\t\tfor (i = 0; i < layers.length; i++) { \r\n    \t\tlayers[i].setMap(null);\r\n\t\t}\r\n\t}\r\n\tfunction makeIcon (input) {\r\n\t\t\r\n\t\tvar iconFlame = { \r\n\t\turl: \"/images/maps/flame.png\",\r\n\t\tsize: new google.maps.Size(20, 34),\r\n\t\tscaledSize: new google.maps.Size(12, 20),\r\n\t\tanchor: new google.maps.Point(6, 20)\r\n\t\t};\r\n\t\t\r\n\t\r\n\t\t\r\n\t\t/**/\r\n\t\tvar  iconSmoke = { \r\n\t\turl: \"/images/maps/smoke.png\",\r\n\t\tsize: new google.maps.Size(20, 34),\r\n\t\tscaledSize: new google.maps.Size(12, 20),\r\n\t\tanchor: new google.maps.Point(6, 20)\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tvar customIcons = [];\r\n\t\tcustomIcons[\"0\"] = iconFlame;\r\n\t\tcustomIcons[\"1\"] = iconSmoke;\r\n\t\t\r\n\t\t\r\n\t\tvar icon = customIcons[input[\"contained\"]];\r\n\t\t\r\n\t\treturn icon;\r\n\t}\r\n\t\r\n\tfunction createMarker(input) {\t\t\r\n\t\r\n\t\tvar icon = makeIcon(input);\r\n\t\t/**/\r\n\t\tvar iconShadow = {\r\n\t\turl: \"http://labs.google.com/ridefinder/images/mm_20_shadow.png\",\r\n\t\tsize : new google.maps.Size(12, 10),\r\n\t\tanchor : new google.maps.Point(6, 20)\r\n\t\t};\r\n\t\tvar marker = new google.maps.Marker({\r\n            position: input.point,\r\n            icon :icon,\r\n            shadow : iconShadow,\r\n            flat: false,\r\n            title: input[\"name\"],\r\n            map: gmap3\r\n      \t\t});\r\n\t\t\r\n \r\n\t\tvar infwOptions = {\r\n \t\t\t \tcontent: formatTabOne(input),\r\n \t\t\t \tposition: input[\"point\"]\r\n\t\t\t\t};\r\n \t\tvar infw = new google.maps.InfoWindow(infwOptions);\r\n \t\t\r\n \t\tmarkers[markerIndex]=marker;\r\n \t\tinfowindows[markerIndex] = infw; \t\t\r\n \t\tmarkerIndex++;\r\n\t\t\r\n\t\tgoogle.maps.event.addListener(marker, \"click\", function() {\r\n \t\t\t //alert(\"You clicked the map. \"+infw.position);\r\n \t\t\t infw.open(gmap3,marker);\r\n \t\t\r\n\t\t});\r\n\t\t\r\n\r\n\t\t\r\n\t\treturn marker;\r\n\t}\r\n\t\t\t\r\n\tfunction formatTabOne (input) {\t\t\t\t\r\n\t\tvar html \t = \"<div class=\\\"bubble\\\">\";\r\n\t\thtml \t\t+= \"<p><strong><a href=\\\"\" + input[\"url\"] + \"\\\">\" + input[\"name\"] + \"</a></strong><br />\";\r\n\t\thtml \t\t+= \"Lat: \" + input[\"lat\"] + \"<br />\";\t\r\n\t\thtml \t\t+= \"Long: \" + input[\"lng\"] + \"</p>\";\t\t\t\r\n\t\thtml \t\t+= \"<p>\" + input[\"summary\"] + \"</p>\";\r\n\t\thtml\t\t+= \"</div>\";\t\t\t\t\t\r\n\t\treturn html;\t\t\t\r\n\t}\r\n\t\t\r\n\tfunction formatTabTwo (input) {\r\n\t\tvar html \t = \"<div class=\\\"bubble\\\">\";\r\n\t\thtml \t\t+= \"<p>\" + input[\"summary\"] + \"</p>\";\r\n\t\thtml\t\t+= \"<p>\"\r\n\t\tif(input[\"acres\"] != null) {\r\n\t\t\thtml \t+= \"<strong>Acres:</strong> \" + input[\"acres\"] + \"<br />\";\r\n\t\t}\t\t\r\n\t\tif(input[\"resources\"] != null) {\r\n\t\t\thtml \t+= \"<strong>Resources:</strong> \" + input[\"resources\"] + \"<br />\";\r\n\t\t}\r\n\t\thtml \t\t+= \"</p></div>\";\t\t\t\t\t\r\n\t\treturn html;\t\t\t\r\n\t}\r\n\t\r\n\tfunction resetMap() {\r\n      if (toggleState == 1) {\r\n        gmap3.setCenter(new google.maps.LatLng(defLat, defLng));\r\n        gmap3.setZoom(defZom);\r\n        gmap3.setMapTypeId(mTypeid);\r\n        var index;\r\n\t\t\r\n\t\tfor (index = 0; index < infowindows.length; ++index) {\r\n\t\t    //console.log(infowindows[index]);\r\n\t\t    var infow = infowindows[index];\r\n\t\t   \r\n\t\t    if (infow != null && typeof infow !== \"undefined\"){ \r\n\t\t    \tinfow.close();\r\n\t\t    }\r\n\t\t}\r\n\t\tvar nullMap = null;\r\n\t\t//clear the KML layer\r\n\t\tif (isActivePerimeters){\r\n\t\t\tkmlLayer.setMap(nullMap);\r\n\t\t\t//reset the KML layer\r\n\t\t\tkmlLayer.setMap(gmap3);\r\n\t\t}\r\n        toggleState = 0;\r\n      } else {\r\n        toggleState = 1;\r\n      }\r\n    }\r\n\t\r\n  \r\n  \r\n  </script>\r\n  \r\n  48.973 latitude, -115.441 longitude <input class=\"button\" onclick=\"resetMap();\" type=\"button\" value=\"zoom to incident\"/><div id=\"perimetersdescdiv\" style=\"display: inline;\"></div><div id=\"perimetersdiv\"></div><div class=\"tundra\" id=\"box_google_map\"></div></div><h3>Incident Overview</h3><div><div class=\"img_wrapper\" style=\"float:right; margin: 0 0 5px 10px;\"><img alt=\"West Kootenai Community Caribou Fire 9-2\" src=\"https://inciweb.nwcg.gov/photos/MTKNF/2017-08-26-1426-Caribou-Fire/highlight/2017_09_02-19.47.02.420-CDT.jpeg\"/><p><span class=\"bold\">Image options:</span> [ <a class=\"thickbox\" href=\"https://inciweb.nwcg.gov/photos/MTKNF/2017-08-26-1426-Caribou-Fire/picts/2017_09_02-19.47.02.420-CDT.jpeg\">Enlarge</a> ] [ <a href=\"https://inciweb.nwcg.gov/photos/MTKNF/2017-08-26-1426-Caribou-Fire/picts/2017_09_02-19.47.02.420-CDT.jpeg\" onmouseover=\"window.status=''; return true;\" target=\"_blank\" title=\"opens in new window\">Full Size</a> ]</p></div><p>The Lincoln County Sheriff has issued a <b>pre-evacuation warning </b>for all zones in the West Kootenai area. There is a good probability of a need to evacuate. It is recommended to move any people requiring extraordinary care, large mobile property, and livestock (if feasible and deemed necessary). </p><p>Beginning Saturday morning (9/2/2017), Law Enforcement will be going door to door throughout the West Kootenai to insure all residents are aware of the Pre-Evacuation Warning.</p></div><br style=\"clear: right;\"/><h4>Basic Information</h4><table cellpadding=\"0\" cellspacing=\"0\" class=\"data\" summary=\"This table displays basic incident information.\"><tr><th class=\"cell0\" scope=\"row\" style=\"width: 30%;\">Current as of</th><td class=\"cell3\"><script>var clientdate = new Date(\"2017-09-02T20:53:07-05:00\");document.write(clientdate.toLocaleString())</script></td></tr><tr><th class=\"cell1\" scope=\"row\">Incident Type</th><td class=\"cell2\">Wildfire</td></tr><tr><th class=\"cell1\" scope=\"row\">Cause</th><td class=\"cell2\">Lightning</td></tr><tr><th class=\"cell1\" scope=\"row\">Date of Origin</th><td class=\"cell2\">Friday August 11th, 2017 approx.   10:45 AM</td></tr><tr><th class=\"cell1\" scope=\"row\">Location</th><td class=\"cell2\">18 miles NW of Eureka, MT</td></tr><tr><th class=\"cell1\" scope=\"row\">Incident Commander</th><td class=\"cell2\">Shawn Pearson, Bob Habeck (t), Type 2 Incident Management Team</td></tr><tr><th class=\"cell1\" scope=\"row\">Incident Description</th><td class=\"cell2\">Strategy: 50% Confine And 50% Full Suppression</td></tr></table><h4>Current Situation</h4><table cellpadding=\"0\" cellspacing=\"0\" class=\"data\" summary=\"This table displays the situation information.\"><tr><th class=\"cell0\" scope=\"row\" style=\"width: 30%;\">Total Personnel</th><td class=\"cell3\">137</td></tr><tr><th class=\"cell1\" scope=\"row\">Size</th><td class=\"cell2\">6,781 Acres</td></tr><tr><th class=\"cell1\" scope=\"row\">Estimated Containment Date</th><td class=\"cell2\">Monday October 30th, 2017 approx.   10:00 PM</td></tr><tr><th class=\"cell1\" scope=\"row\">Fuels Involved</th><td class=\"cell2\"><p>Timber (litter and understory) Burning in subalpine fir, and dead and down spruce</p></td></tr><tr><th class=\"cell1\" scope=\"row\">Significant Events</th><td class=\"cell2\"><p>Extreme fire behavior, long range spotting, group tree torching. Third day of extreme fire behavior, with wind driven runs with long range spotting </p></td></tr></table><h4>Outlook</h4><table cellpadding=\"0\" cellspacing=\"0\" class=\"data\" summary=\"This table displays outlook information.\"><tr><th class=\"cell0\" scope=\"row\" style=\"width: 30%;\">Planned Actions</th><td class=\"cell3\"><p>Safely use all available crews, air and heavy equipment to protect values at risk around structures in Spring Creek, Dodge Creek, and West Kootenai population protection areas. </p></td></tr><tr><th class=\"cell1\" scope=\"row\">Projected Incident Activity</th><td class=\"cell2\"><p>Red Flag on Sunday for wind gusts as high as 30 mph and relative humidity in the lower teens.  </p></td></tr></table><h4>Current Weather</h4><table cellpadding=\"0\" cellspacing=\"0\" class=\"data\" summary=\"This table displays weather information.\"><tr><th class=\"cell0\" scope=\"row\" style=\"width: 30%;\">Weather Concerns</th><td class=\"cell3\"><p>Red flag alert for Sunday with gusts to 30 MPH and hot dry conditions.  Sunday night the winds will switch and come out of the north with gusts to 30 mph pushing the fire to the south. </p></td></tr></table>\n</div>", "summary_detail": {"base": "", "type": "text/html", "value": "The Lincoln County Sheriff has issued a pre-evacuation warning for all zones in the West Kootenai area. There is a good probability of a need to evacuate. It is recommended to move any people requiring extraordinary care, large mobile property, and livestock (if feasible and deemed necessary). Beginning Saturday morning (9/2/2017), Law Enforcement will be going door to door throughout the West Kootenai to insure all residents are aware of the Pre-Evacuation", "language": null}, "published_parsed": null, "links": [{"href": "https://inciweb.nwcg.gov/incident/5539/", "type": "text/html", "rel": "alternate"}], "title": "Caribou Fire (Wildfire)", "geo_lat": "48.973055555556", "summary": "The Lincoln County Sheriff has issued a pre-evacuation warning for all zones in the West Kootenai area. There is a good probability of a need to evacuate. It is recommended to move any people requiring extraordinary care, large mobile property, and livestock (if feasible and deemed necessary). Beginning Saturday morning (9/2/2017), Law Enforcement will be going door to door throughout the West Kootenai to insure all residents are aware of the Pre-Evacuation", "county": "Lincoln County", "guidislink": false, "title_detail": {"base": "", "type": "text/plain", "value": "Caribou Fire (Wildfire)", "language": null}, "link": "https://inciweb.nwcg.gov/incident/5539/", "published": "Sat, 02 Sep 2017 20:53:07 -05:00", "geo_long": "-115.44111111111", "where": {"type": "Point", "coordinates": [-115.44111111111, 48.973055555556]}, "id": "https://inciweb.nwcg.gov/incident/5539/"}